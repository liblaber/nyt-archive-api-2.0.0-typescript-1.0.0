// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { BaseService } from '../base-service';
import { ContentType, HttpResponse } from '../../http';
import { RequestConfig } from '../../http/types';
import { GetByYearMonthJsonOkResponse, getByYearMonthJsonOkResponseResponse } from './models';

export class ArchiveService extends BaseService {
  /**
   * Pass in year and month and get back JSON with all articles for that month. The response can be big (~20 megabytes) and contain thousands of articles, depending on the year and month.
   * @param {number} year - Year: 1851-2019
   * @param {number} month - Year: 1-12
   * @returns {Promise<HttpResponse<GetByYearMonthJsonOkResponse>>} An array of articles.
   */
  async getByYearMonthJson(
    year: number,
    month: number,
    requestConfig?: RequestConfig,
  ): Promise<HttpResponse<GetByYearMonthJsonOkResponse>> {
    const path = this.client.buildPath('/{year}/{month}.json', { year: year, month: month });
    const options: any = {
      responseSchema: getByYearMonthJsonOkResponseResponse,
      requestSchema: z.any(),
      headers: {},
      requestContentType: ContentType.Json,
      responseContentType: ContentType.Json,
      retry: requestConfig?.retry,
      config: this.config,
    };
    return this.client.get(path, options);
  }
}
