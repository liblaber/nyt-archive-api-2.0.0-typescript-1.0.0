// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { BaseService } from '../base-service';
import { ContentType, HttpResponse } from '../../http';
import { RequestConfig } from '../../http/types';
import { RequestBuilder } from '../../http/transport/request-builder';
import {
  GetByYearMonthJsonOkResponse,
  getByYearMonthJsonOkResponseResponse,
} from './models/get-by-year-month-json-ok-response';

export class ArchiveService extends BaseService {
  /**
   * Pass in year and month and get back JSON with all articles for that month. The response can be big (~20 megabytes) and contain thousands of articles, depending on the year and month.
   * @param {number} year - Year: 1851-2019
   * @param {number} month - Year: 1-12
   * @returns {Promise<HttpResponse<GetByYearMonthJsonOkResponse>>} An array of articles.
   */
  async getByYearMonthJson(
    year: number,
    month: number,
    requestConfig?: RequestConfig,
  ): Promise<HttpResponse<GetByYearMonthJsonOkResponse>> {
    const request = new RequestBuilder<GetByYearMonthJsonOkResponse>()
      .setConfig(this.config)
      .setBaseUrl(this.config)
      .setMethod('GET')
      .setPath('/{year}/{month}.json')
      .setRequestSchema(z.any())
      .setResponseSchema(getByYearMonthJsonOkResponseResponse)
      .setRequestContentType(ContentType.Json)
      .setResponseContentType(ContentType.Json)
      .setRetryAttempts(this.config, requestConfig)
      .setRetryDelayMs(this.config, requestConfig)
      .setResponseValidation(this.config, requestConfig)
      .addPathParam('year', year)
      .addPathParam('month', month)
      .build();
    return this.client.call<GetByYearMonthJsonOkResponse>(request);
  }
}
